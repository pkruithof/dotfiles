php_ensure () {
  if ! type_exists 'phpbrew'; then
    php_install
  fi

  source ~/.phpbrew/bashrc
}

php_install () {
  e_header "Installing phpbrew"

  curl -L -O https://github.com/phpbrew/phpbrew/raw/master/phpbrew
  chmod +x phpbrew
  sudo mv phpbrew /usr/local/bin/phpbrew

  phpbrew init
}

php_update () {
  e_header "Updating phpbrew"

  phpbrew self-update > /dev/null
  phpbrew update > /dev/null

  latest=$(phpbrew_latest)
  readarray -t installed <<<"$(phpbrew_installed)"

  if ! in_array installed $latest; then
    e_info "installing latest PHP version"
    phpbrew install ${latest} +default
  fi

  if [[ ! $(php -v | grep ${latest}) ]]; then
    e_info "==> switching to PHP ${latest}"
    source ${HOME}/.phpbrew/bashrc
    phpbrew switch ${latest}
  fi
}

phpbrew_latest () {
  phpbrew known | tr -s ", " "\012" | grep -E '^7\.[0-9]\.' | head -1
}

phpbrew_installed () {
  phpbrew list | sed 's/^* php-//' | sed 's/^  php-//' | sed 's/ *$//'
}

php_ensure_apps () {
  source ${HOME}/.phpbrew/bashrc

  php_ensure_app composer
  php_ensure_app phpunit

  composer config --global bin-dir ${PHPBREW_BIN}
  composer_require_package d11wtq/boris
  composer_require_package friendsofphp/php-cs-fixer
  composer_require_package hirak/prestissimo
}

php_update_apps () {
  if [[ $(composer global show --outdated --strict 2> /dev/null) ]]; then
    e_info "==> updating composer applications"
    composer global update
  fi
}

php_ensure_app () {
  if [[ ! $(phpbrew app list | grep $1) ]]; then
    e_info "==> installing application $1"
    phpbrew app get $1
  fi
}

composer_require_package () {
  if [[ ! $(composer global show $1 2> /dev/null) ]]; then
    e_info "==> installing package $1"
    composer global require -q $1
  elif [[ $(composer global show -o 2> /dev/null | grep $1) ]]; then
    e_info "==> upgrading package $1"
    composer global require -q $1
  fi
}
